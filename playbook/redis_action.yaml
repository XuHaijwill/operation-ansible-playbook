---
# ansible-playbook redis_action.yaml --extra-vars "{'hostsName':'192.168.60.134'}" --verbose
# ansible-playbook redis_action.yaml --extra-vars "hostsName=192.168.60.134" --verbose
- name: node exporter
  hosts: "{{ hostsName }}"
  gather_facts: false
  tasks:
    - name: Check if Redis image exists
      shell: |
        docker images --filter "reference=redis" --format "{{.Repository}}:{{.Tag}}"
      register: redis_image_status
      ignore_errors: true

    - name: Debug Redis image status
      debug:
        msg: >
          Redis image is {{ 'available' if redis_image_status.stdout != '' else 'not available' }}

    - name: docker pull redis
      shell: |
        docker pull redis
      when: redis_image_status.stdout == ''

    - name: Check if Redis container is running
      shell: |
        docker ps --filter "name=redis" --filter "status=running" --format "{{.Names}}"
      register: redis_status
      ignore_errors: true

    - name: Debug Redis container status
      debug:
        msg: >
          Redis container is {{ 'running' if redis_status.stdout != '' else 'not running' }}

    - name: Pull and run Redis container if not running
      shell: |
        # https://blog.csdn.net/chenthe1/article/details/129470539
        # -p 6379:6379 端口映射：前表示主机部分，：后表示容器部分。
        # -log 日志相关
        # --name redis 指定该容器名称，查看和进行操作都比较方便。
        # -v 挂载文件或目录 ：前表示主机部分（必须为绝对路径），：后表示容器部分。
        # /opt/myredis/redis.conf:/etc/redis/redis.conf 挂载我的配置文件
        # /opt/myredis/data:/data 挂载redis的数据路径
        # -d redis 表示后台启动redis
        # redis-server /etc/redis/redis.conf 指定配置文件的路径。/etc/redis/redis.conf指的是容器内的文件路径，对应的宿主机的路径要根据挂载卷的路径找到。我的宿主机路径就是/opt/myredis/redis.conf
        # –appendonly yes 开启redis 持久化
        # –requirepass 123456 设置密码为123456
        docker run --restart=always --log-opt max-size=100m --log-opt max-file=2 -p 6379:6379 --name myredis -v /opt/myredis/redis.conf:/etc/redis/redis.conf -v /opt/myredis/data:/data -d redis redis-server /etc/redis/redis.conf --appendonly yes --requirepass 123456
      when: redis_status.stdout == ''